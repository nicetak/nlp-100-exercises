[["chapter-1-warm-up.html", "A Solution of NLP 100 Exercise Chapter 1: Warm-up 00. Reversed string 01. “schooled” 02. “shoe” + “cold” = “schooled” 03. Pi 04. Atomic symbols 05. n-gram 06. Set 07. Template-based sentence generation 08. Cipher text 09. Typoglycemia", " A Solution of NLP 100 Exercise Kazuharu Yanagimoto March 06, 2022 Chapter 1: Warm-up 00. Reversed string stringi::stri_reverse(&quot;stressed&quot;) ## [1] &quot;desserts&quot; 01. “schooled” str_split(&quot;schhooled&quot;, &quot;&quot;) %&gt;% unlist() %&gt;% .[c(TRUE, FALSE)] ## [1] &quot;s&quot; &quot;h&quot; &quot;o&quot; &quot;l&quot; &quot;d&quot; 02. “shoe” + “cold” = “schooled” c(unlist(str_split(&quot;shoe&quot;, &quot;&quot;)), unlist(str_split(&quot;cold&quot;, &quot;&quot;))) %&gt;% .[c(1, 5, 2, 6, 3, 7, 4, 8)] %&gt;% paste0(collapse = &quot;&quot;) ## [1] &quot;schooled&quot; 03. Pi s &lt;- &quot;Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics&quot; s %&gt;% str_replace_all(&quot;,|\\\\.&quot;, &quot;&quot;) %&gt;% str_split(&quot; &quot;) %&gt;% unlist() %&gt;% str_length() ## [1] 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 04. Atomic symbols s &lt;- &quot;Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can&quot; indices &lt;- c(1, 5, 6, 7, 8, 9, 15, 16, 19) ss &lt;- s %&gt;% str_split(&quot; &quot;) %&gt;% unlist() map(1:length(ss), function(i){ setNames(i, str_sub(ss[i], 1, if_else(i %in% indices, 1, 2))) }) %&gt;% unlist() ## H He Li Be B C N O F Ne Na Mi Al Si P S Cl Ar K Ca ## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 05. n-gram n_gram_word &lt;- function(s, n = 2){ str_split(s, &quot; &quot;) %&gt;% unlist() %&gt;% embed(n) %&gt;% .[, n:1] %&gt;% asplit(1) } n_gram_letter &lt;- function(s, n = 2){ str_split(s, &quot;&quot;) %&gt;% unlist() %&gt;% embed(n) %&gt;% .[, n:1] %&gt;% apply(1, paste, collapse = &quot;&quot;) } s &lt;- &quot;I am an NLPer&quot; n_gram_word(s) ## [[1]] ## [1] &quot;I&quot; &quot;am&quot; ## ## [[2]] ## [1] &quot;am&quot; &quot;an&quot; ## ## [[3]] ## [1] &quot;an&quot; &quot;NLPer&quot; n_gram_letter(s) ## [1] &quot;I &quot; &quot; a&quot; &quot;am&quot; &quot;m &quot; &quot; a&quot; &quot;an&quot; &quot;n &quot; &quot; N&quot; &quot;NL&quot; &quot;LP&quot; &quot;Pe&quot; &quot;er&quot; 06. Set x &lt;- n_gram_letter(&quot;paraparaparadise&quot;) y &lt;- n_gram_letter(&quot;paragraph&quot;) union(x, y) ## [1] &quot;pa&quot; &quot;ar&quot; &quot;ra&quot; &quot;ap&quot; &quot;ad&quot; &quot;di&quot; &quot;is&quot; &quot;se&quot; &quot;ag&quot; &quot;gr&quot; &quot;ph&quot; intersect(x, y) ## [1] &quot;pa&quot; &quot;ar&quot; &quot;ra&quot; &quot;ap&quot; setdiff(x, y) ## [1] &quot;ad&quot; &quot;di&quot; &quot;is&quot; &quot;se&quot; &quot;se&quot; %in% x ## [1] TRUE &quot;se&quot; %in% y ## [1] FALSE 07. Template-based sentence generation template_sentence &lt;- function(x, y, z){ sprintf(&quot;%s is %s at %s&quot;, y, x, z) } template_sentence(12, &quot;temperature&quot;, 22.4) ## [1] &quot;temperature is 12 at 22.4&quot; 08. Cipher text asc &lt;- function(x) { strtoi(charToRaw(x), 16L) } chr &lt;- function(n) { rawToChar(as.raw(n)) } cipher &lt;- function(s){ s %&gt;% str_split(&quot;&quot;) %&gt;% unlist() %&gt;% map(function(l){ num_l &lt;- asc(l) if_else(num_l %in% asc(&quot;a&quot;):asc(&quot;z&quot;), chr(219 - num_l), l) }) %&gt;% unlist() %&gt;% paste(collapse = &quot;&quot;) } s &lt;- &quot;The quick brown fox jumps over the lazy dog.&quot; paste0(&quot;Plain text: &quot;, s) ## [1] &quot;Plain text: The quick brown fox jumps over the lazy dog.&quot; paste0(&quot;Cipher text: &quot;, cipher(s)) ## [1] &quot;Cipher text: Tsv jfrxp yildm ulc qfnkh levi gsv ozab wlt.&quot; paste0(&quot;Decrypted text: &quot;, cipher(cipher(s))) ## [1] &quot;Decrypted text: The quick brown fox jumps over the lazy dog.&quot; 09. Typoglycemia word_mixed &lt;- function(w){ len_w &lt;- str_length(w) if(len_w &gt; 4){ ls &lt;- w %&gt;% str_split(&quot;&quot;) %&gt;% unlist() c(ls[1], sample(ls[2:(len_w-1)], size = len_w-2, replace = FALSE), ls[len_w]) %&gt;% paste(collapse = &quot;&quot;) } else { return(w) } } typoglycemia &lt;- function(s){ s %&gt;% str_split(&quot; &quot;) %&gt;% unlist() %&gt;% lapply(word_mixed) %&gt;% unlist() %&gt;% paste(collapse = &quot; &quot;) } s &lt;- &quot;I couldn&#39;t believe that I could actually understand what I was reading : the phenomenal power of the human mind .&quot; typoglycemia(s) ## [1] &quot;I cudlo&#39;nt beileve that I cuold alclatuy uasrnntedd what I was rdiaeng : the pnameoenhl power of the huamn mind .&quot; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
